name: Test and Build
on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
    tags:
      - v*

# This ensures that previous jobs for the PR are canceled when the PR is
# updated.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  golangci-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          fail_on_error: true
          go_version_file: go.mod
          reporter: github-pr-review
  test:
    name: test
    runs-on: ubuntu-latest
    needs: golangci-lint
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: test
        run: |
          make coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: save test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage.html
  build:
    name: build
    runs-on: ubuntu-latest
    needs: test
    # continue-on-error: true
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64, "386"]
        # include:
        #   - os: windows
        #     arch: 386
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: compile
        env:
          # disable CGO to make fully static binaries
          CGO_ENABLED: 0
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          make all
      - name: save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries
          path: bin/
  docker:
    - name: restore build artifacts
      uses: actions/download-artifact@v4
      with:
        name: compiled-binaries
    - name: Build and push Docker image
      uses: aztechian/kube-nut/.github/workflows/docker-build.yaml@main
      with:
        platforms: linux/amd64,linux/arm64,linux/386,windows/amd64,windows/arm64,windows/386,darwin/amd64,darwin/arm64,darwin/386
